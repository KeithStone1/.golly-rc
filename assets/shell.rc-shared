# vim:ft=sh et sw=2 ts=2:

alias ls='ls --color=auto --group-directories-first'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

export EDITOR=vim
export PAGER=less
export MAVEN_OPTS="-Xmx2048m -XX:MaxPermSize=384m"

alias la='ls -la'
alias ll='ls -l'
alias lsa='ls -a'
alias svnstnew='svn st --ignore-externals | fgrep ? | cut -b8-'
alias svnste='svn st --ignore-externals | grep -v ^X'
alias svn_add_rm="svnste | sort | fgrep '?' | cut -b3- | xargs --no-run-if-empty echo svn add; echo; svnste | sort | fgrep '!' | cut -b3- | xargs --no-run-if-empty echo svn rm"
alias b=bundle
alias be='bundle exec'
alias bgc='bundle exec guard -c'
alias rak='bundle exec rake'
alias vimrc='vim ~/.vimrc'
alias gemdir='pushd "`gem env | fgrep INSTALL | perl -pe "s/^.+?: //"`/gems"'
alias Vim=vim
alias view='vim -R'
alias sharedrc="vim ~/.golly-rc/assets/shell.rc-shared && echo Reloading... && . ~/.${SHELL}rc"
alias golrc='pushd ~/.golly-rc'
alias ssc='sudo systemctl'
alias mvn="$HOME/.golly-rc/bin/mvnc"
alias code_gsub="$HOME/.golly-rc/bin/code_gsub"
alias killsbt="jps | grep sbt | awk '{print \$1}' | xargs --no-run-if-empty --verbose kill -9"
alias scr='clear && scala -language:_'

# Distro-specific
source "$HOME/.golly-rc/lib/distro.sh"
case "$(distro)" in
  ArchLinux)
    alias p='sudo pacman -S --needed'
    alias syu='sudo pacman -Syu'
    alias syua='yaourt -Syua'
    alias ql='pacman -Ql'
    ;;
  Ubuntu)
    function show_installed { f="$1"; [ -z "$f" ] && f='.*'; dpkg --get-selections | grep '[^a-zA-Z]install' | egrep "$f" | sed 's/[ \t].*//' | xargs dpkg -s | egrep '^(Package|Version)' | perl -0000 -pe 's/Package: (\S+)\s*[\r\n]+Version: (\S+)/\1 \2 \2/g' | perl -pe 's/ (?:\d+:)?(\S+?)[-+~]\S+$/ \1/; s/ (\S+) (\S+)$/ \2 \1/' | column -t | perl -pe 's/(\S+)(\s+\S+)$/\1    \2/' | sort ; }
    ;;
esac

# Functions
function show_cp { if [ ! -r "$1" ]; then echo "Can't read: $1"; else unzip -p $1 META-INF/MANIFEST.MF | sed '/^Class-Path:/,$!d' | tr -d '\n\r' | perl -pe 's/^.+?: //; s/ //g; s/(?<=\.jar)/\n/g'; fi; }
function test_cp { show_cp "$1" | sed "s|^|$(dirname "$1")/|" | xargs -L1 ls -l; }
function mc { mkdir -p "$1" && cd "$1"; }
function git_pull_all { [ $? -eq 0 ] && set - .; find "$@" -type d -name .git | xargs -L1 -I{} bash -c 'echo "{}"; cd "{}/.." && git pull; echo'; }
function gv2png { [ $# -ne 1 ] && echo "Filename missing." || ( o="$1.png"; dot -Tpng -o"$o" "$1" && xdg-open "$o" 2>/dev/null);}
function s { for a in "$@"; do xdg-open "$a" 2>&1 | fgrep -v WARNING | sed '/^ *$/d'; done }
function ss { for a in "$@"; do nohup xdg-open "$a" &>/dev/null ; done }
function server_off { [ -e ~/.m2/settings.xml ] && mv ~/.m2/settings.xml{,.off} }
function server_on { [ ! -e ~/.m2/settings.xml ] && mv ~/.m2/settings.xml{.off,} }
function kvm_on {
  sudo modprobe -r vboxnetflt
  sudo modprobe -r vboxdrv
  sudo modprobe kvm_intel
  lsmod | egrep 'kvm|vbox'
}
function kvm_off {
  sudo modprobe -r kvm_intel
  sudo modprobe -r kvm
  sudo modprobe vboxdrv
  sudo modprobe vboxnetflt
  lsmod | egrep 'kvm|vbox'
}
function vime {
  f="$1"
  if [ -z "$f" ]; then
    echo "USAGE: vime <filename> [<script args>]"
  elif [ ! -x "$f" ]; then
    echo "Not executable: $f"
  else
    shift
    ff="$(dirname "$f")/$(basename "$f")"
    vim "$f" && clear && echo "> $ff $*" && "$ff" "$@"
  fi
}
function sync-desktop {
  rsync -rulptzh --stats --exclude-from=/home/golly/.golly-rc/gitignore \
    --rsh=ssh golly-desktop:`pwd`/. .
}

# Use golly-rc path
export PATH="$PATH:$HOME/.golly-rc/path"

#export GIT_SSL_NO_VERIFY=true
unset RUBYOPT

# Man page colours
export LESS_TERMCAP_md=$'\E[01;31m' # begin bold
export LESS_TERMCAP_us=$'\E[32m' # begin underline
export LESS_TERMCAP_mb=$'\E[01;34m' # begin blinking
export LESS_TERMCAP_so=$'\E[01;33m' # begin standout-mode â€“ info
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
export LESS_TERMCAP_ue=$'\E[0m' # end underline

# Terminal colours
source "$HOME/.golly-rc/assets/.term_colors"

# RVM
if [ -s "$HOME/.rvm/scripts/rvm" ]; then
  source "$HOME/.rvm/scripts/rvm"
  #export PATH="$HOME/.rvm/bin:$PATH"
# RBENV
elif [ -e "$HOME/.rbenv/bin" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

# Android
if [ -d /opt/android-sdk ]; then
  export ANDROID_HOME=/opt/android-sdk
  export PATH="$PATH:$ANDROID_HOME/tools"
fi

# Haskell Cabal
[ -d $HOME/.cabal/bin ] && export PATH="$HOME/.cabal/bin:$PATH"

# Load local shared settings
export LOCALRC="$HOME/.localrc"
alias localrc="vim "'"'"$LOCALRC"'"'" && echo Reloading... && . "'"'"$LOCALRC"'"'
[ -f "$LOCALRC" ] && source "$LOCALRC"

# Display directory & cmd in terminal title bar
if [ -n "$GUAKE" ]; then
  precmd() { print -Pn "\e]0;%3~\a" }
  preexec () { print -Pn "\e]0;$1 [%3~]\a" }
  preexec () { print -Pn "\e]0;[%3~] $1\a" }
  export TERM=gnome-256color
else
  case "$TERM" in
    rxvt|*term|gnome*)
      # %m = machine, %~ = pwd
      precmd() { print -Pn "\e]0;%m:%~\a" }
      preexec () { print -Pn "\e]0;$1 [%m:%~]\a" }
    ;;
  esac
fi
